{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAkB9C,OACI,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAQV,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCTdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1Ca,QAAQC,IAAIR,GAdG,kBAgBRA,GAhBQ,4CAAH,sDCEPS,EAAc,SAAC,GAAuB,EAArBN,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKgB,UAAU,0CAEX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCHHS,EAAU,SAAC,GAAiB,IAAfrB,EAAc,EAAdA,SAAc,ECDZ,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAEGuB,EDjB0BK,CAAc5B,GAAlCa,EAFuB,EAE5BN,KAAae,EAFe,EAEfA,QAGrB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDlB,EAArD,KAEEsB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGPL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACLD,UESlBoB,EA1BM,WAAM,MAGa5C,mBAAS,CAAC,cAHvB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KAKvB,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BACA,4BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OAEpB,kBAAC,EAAD,CACC6B,IAAK7B,EACLA,SAAUA,UCf5BgC,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAQ,kBAAC,EAAD,MAAmBJ,I","file":"static/js/main.d755f217.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {PropTypes } from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\nconst handleInputChange = (e) =>{\r\n    setInputValue(e.target.value);\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if (inputValue.trim().length >= 2){\r\n        setCategories( cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n    }\r\n        \r\n   // console.log(\"Submit hecho\")\r\n}\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) =>{\r\n       \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=wBih26jmR95A898NkVvFb9aeNpK8OUXe&limit=10`;\r\n        const resp = await fetch( url );\r\n        const {data }= await resp.json();\r\n\r\n        const gifs = data.map (img =>{\r\n            return {\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url,\r\n            }\r\n        })\r\n\r\n        console.log(gifs);\r\n        //setImages(gifs);\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            \r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return ( \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n    return state; // { data:[], loading: true };\n}\n\n\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories =['One Punch', 'Dragon ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n           <h1>GifExpertApp</h1>\r\n           <AddCategory setCategories={ setCategories }/>\r\n\r\n           <hr />\r\n           <ol>\r\n               {\r\n                   categories.map( category =>(\r\n                       //return <li key={category}> {category} </li>\r\n                       <GifGrid \r\n                        key={category}\r\n                        category={category} \r\n                        />\r\n                   ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nconst divRoot = document.getElementById('root');\n\nReactDOM.render( <GifExpertApp /> , divRoot );\n\n//GifExpertApp\n"],"sourceRoot":""}